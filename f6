lvm_vg: datavg
lvm_pvs:
  - /dev/sdb
  - /dev/sdc
  - /dev/sdd
  - /dev/sde
  - /dev/sdf
  - /dev/sdg
  - /dev/sdh
  - /dev/sdi
  - /dev/sdj
  - /dev/sdk
  - /dev/sdl
  - /dev/sdm
lvm_fs: ext4
lvm_layout:
  - { name: app_log,        mount: /var/app/log,                                size_g: 1000 }
  - { name: app_lib,        mount: /var/app/lib,                                size_g: 100  }
  - { name: opt_cloudera,   mount: /opt/cloudera,                               size_g: 100  }
  - { name: Opt_Cloudera,   mount: /opt/Cloudera,                               size_g: 100  }
  - { name: ozone_metadata, mount: /var/app/lib/hadoop-ozone/om/ozone-metadata, size_g: 500  }
  - { name: ozone_ratis,    mount: /var/app/lib/hadoop-ozone/om/ratis,          size_g: 500  }
  - { name: ozone_data,     mount: /var/app/lib/hadoop-ozone/om/data,           size_g: 3000 }
  - { name: ozone_snapshot, mount: /data/1/om/snapshot,                         size_g: 4000 }
email_to: you@example.com
email_subject: Ozone OM datavg rebuild

---
- name: check vg exists
  command: "vgs --noheadings {{ lvm_vg }}"
  register: vgchk
  failed_when: false
  changed_when: false

- name: vg exists -> mail + end
  when: vgchk.rc == 0
  block:
    - name: df
      command: df -h
      register: df1
      changed_when: false
    - name: mail fail (vg exists)
      shell: 'echo "Host: {{ inventory_hostname }}; VG {{ lvm_vg }} exists" | mail -s "{{ email_subject }} FAILURE" "{{ email_to }}"'
      changed_when: false
    - meta: end_play

- name: pv total gib
  shell: 'lsblk -b -dn -o SIZE {{ lvm_pvs | join(" ") }} | awk "{s+=$1} END{print int(s/1024/1024/1024)}"'
  register: pv_total
  changed_when: false

- name: compute lv_total_g
  set_fact:
    lv_total_g: "{{ lvm_layout | map(attribute='size_g') | map('int') | sum }}"

- name: compute needed_g (5pct headroom)
  set_fact:
    needed_g: "{{ ((lv_total_g * 105) // 100) | int }}"

- name: capacity fail -> mail + end
  when: (pv_total.stdout | int) < (needed_g | int)
  block:
    - name: df
      command: df -h
      register: df2
      changed_when: false
    - name: mail fail (space)
      shell: 'echo "Host: {{ inventory_hostname }}; Need: {{ needed_g }} GiB; Have: {{ pv_total.stdout }} GiB" | mail -s "{{ email_subject }} FAILURE" "{{ email_to }}"'
      changed_when: false
    - meta: end_play

- name: pvcreate
  shell: 'pvcreate -y {{ item }}'
  args: { warn: false }
  loop: "{{ lvm_pvs }}"

- name: vgcreate
  shell: 'vgcreate {{ lvm_vg }} {{ lvm_pvs | join(" ") }}'

- name: lvcreate
  shell: 'lvcreate -y -L {{ item.size_g }}G -n lv_{{ item.name }} {{ lvm_vg }}'
  loop: "{{ lvm_layout }}"

- name: mkfs
  shell: 'mkfs -t {{ lvm_fs }} /dev/{{ lvm_vg }}/lv_{{ item.name }}'
  loop: "{{ lvm_layout }}"

- name: mkdirs
  file:
    path: "{{ item.mount }}"
    state: directory
    mode: "0755"
  loop: "{{ lvm_layout }}"

- name: fstab lines
  lineinfile:
    path: /etc/fstab
    create: yes
    line: "/dev/{{ lvm_vg }}/lv_{{ item.name }} {{ item.mount }} {{ lvm_fs }} defaults,noatime 0 0"
    state: present
  loop: "{{ lvm_layout }}"

- name: mount all
  shell: 'mount -a'

- name: df after
  command: df -h
  register: df_ok
  changed_when: false

- name: mail success
  shell: 'echo "Host: {{ inventory_hostname }}; VG: {{ lvm_vg }}; PV: {{ pv_total.stdout }} GiB; LV: {{ lv_total_g }} GiB" | mail -s "{{ email_subject }} SUCCESS" "{{ email_to }}"'
  changed_when: false
